set nocompatible
filetype off

" Vundle
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'Raimondi/delimitMate'
Bundle 'sjl/gundo.vim'
Bundle 'scrooloose/nerdtree'
Bundle 'msanders/snipmate.vim'
Bundle 'majutsushi/tagbar'
Bundle 'tomtom/tcomment_vim'
Bundle 'altercation/vim-colors-solarized'
Bundle 'tpope/vim-fugitive'
Bundle 'edsono/vim-matchit'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'vim-scripts/Rename2'
Bundle 'scrooloose/syntastic'
Bundle 'skammer/vim-css-color'
Bundle 'tpope/vim-endwise'
Bundle 'git://git.wincent.com/command-t.git'

" General settings
filetype on
filetype plugin indent on
syntax on

cd ~/Desktop

let mapleader=" "
let maplocalleader=" "

set shortmess=at        " shorten error messages

set modeline            " enable modelines
set modelines=5

set backspace=2

set hidden              " Enable hidden buffers
set equalalways         " make splits equal size

set lazyredraw          " don't redraw while executing macros

set smarttab
set tabstop=4
set softtabstop=4
set shiftwidth=4

set smartindent
" don't outdent hashes
inoremap # X#
set hlsearch            " better search
set incsearch
set ignorecase

set gdefault            " substitute multiple times per line

set scrolloff=5
set sidescroll=5

set linebreak
set showbreak=↳\

set paste

set encoding=utf-8

set fileformats=unix,dos,mac    " prefer unix over windows over os9 formats

set autoread                    " reload files changed outside vim

set autochdir

set backupdir=~/.vim/tmp " swap files
set directory=~/.vim/tmp

" colorscheme
set background=dark
if has('gui_running')
  let g:solarized_menu=0
  colorscheme solarized
else
  colorscheme myterm
endif

" MacVim only options
if has('gui_running')
  set guioptions-=T
  set completeopt-=preview
  set gcr=a:blinkon0
  set number
  set ruler
  set cursorline
  set lines=36 columns=100
  set guifont=Consolas:h13
  set fuoptions=maxvert,maxhorz
endif

" Status line
if has('gui_running')
  set showcmd
  set cmdheight=1
  set laststatus=2
"  set noshowmode
  set statusline=
  set statusline+=[%n]\                         " buffer number
  set statusline+=%t                            " file name
  set statusline+=%h%m%r%w\                     " flags
  set statusline+=%{SyntasticStatuslineFlag()}  " syntastic
  set statusline+=%=                            " right align
  set statusline+=%{fugitive#statusline()}      " fugitive
  set statusline+=\ [%{strlen(&ft)?&ft:'none'}, " filetype
  set statusline+=%{strlen(&fenc)?&fenc:&enc},  " encoding
  set statusline+=%{&fileformat}]               " file format
  set statusline+=\ %l\/%L                      " offset
endif

" Key bindings
nnoremap <silent> <Space>s :sp<CR>                 " Open a new split
nnoremap <silent> <Space>q :q<CR>                  " Close

nnoremap <Space>h <C-W>h                           " Move around between splits
nnoremap <Space>l <C-W>l
nnoremap <Space>j <C-W>j
nnoremap <Space>k <C-W>k

nnoremap <Space>m :bn<CR>                          " Cycle through buffers
nnoremap <Space>n :bp<CR>

nnoremap <silent> <Space>f :nohlsearch<CR>         " Hide search

nnoremap <Space>ß :%s/\s\+$//<cr>:let @/=''<CR>    " Remove trailing whitespace
nnoremap <Space>p :set nowrap!<CR>                 " Toggle wrapping
nnoremap <Space>0 :setlocal spell! spell?<CR>      " Toggle spell check

nnoremap <silent> <Space>e :NERDTreeTabsToggle<CR> " Toggle NERDTree
nnoremap <silent> <Space>r :GundoToggle<CR>        " Toggle Gundo
nnoremap <silent> <Space>d :CommandT<CR>           " Toogle CommandT
nnoremap <silent> <Space>i :TagbarToggle<CR>       " Toggle Tagbar

call togglebg#map('<Space>u')                      " background toggle

" <Ctrl><Space> for Autocomplete
if has('gui_running')
  inoremap <C-Space> <C-n>
endif

" The PC is fast enough, do syntax highlight syncing from start
autocmd BufEnter * :syntax sync fromstart

" Remember cursor position
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif

" always turn on spell check for *.tex and *.tex files
au SessionLoadPost,BufNewFile,BufRead *.txt setlocal spell
au SessionLoadPost,BufNewFile,BufRead *.tex setlocal spell

" customize the wildmenu
set wildmenu
set wildignore=*.dll,*.o,*.pyc,*.bak,*.exe,*.jpg,*.jpeg,*.png,*.gif,*$py.class,*.class
set wildmode=list:full

" NERDTree
let g:nerdtree_tabs_open_on_gui_startup = 0
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeIgnore=['\~$', '\.pyc$', '\.pyo$', '\.class$', 'pip-log\.txt$', '\.o$']
let NERDTreeShowBookmarks=1
set guioptions-=L " hide left scrollbar

" tagbar
let g:tagbar_usearrows = 1
let g:tagbar_ctags_bin = '/usr/local/bin/ctags'

" Syntastic
let g:syntastic_enable_signs=0

" reselect visual block after indent
vnoremap < <gv
vnoremap > >gv

" python support
autocmd FileType python setlocal expandtab shiftwidth=4 tabstop=4 colorcolumn=79
\ formatoptions+=croq softtabstop=4 smartindent
\ cinwords=if,elif,else,for,while,try,except,finally,def,class,with
let python_highlight_all=1
let python_highlight_exceptions=0
let python_highlight_builtins=0
autocmd FileType pyrex setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4 smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class,with

" ruby support
autocmd FileType ruby setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4 colorcolumn=79

" go support
autocmd BufNewFile,BufRead *.go setlocal ft=go
autocmd FileType go setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" php support
autocmd FileType php setlocal shiftwidth=4 tabstop=4 softtabstop=4 expandtab

" GLSL
autocmd bufnewfile,bufread *.frag,*.fragment,*.vert,*.vertex,*.shader,*.glsl setlocal ft=glsl
autocmd FileType glsl setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" Verilog
autocmd FileType verilog setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" CSS
autocmd FileType css setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" Java
autocmd FileType java setlocal shiftwidth=4 tabstop=4 softtabstop=4 expandtab

" rst
autocmd BufNewFile,BufRead *.txt setlocal ft=rst
autocmd FileType rst setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4
\ formatoptions+=nqt textwidth=74

" C#
autocmd FileType cs setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab

" C/Obj-C/C++
autocmd FileType c setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab colorcolumn=79
autocmd FileType cpp setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab colorcolumn=79
autocmd FileType objc setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab colorcolumn=79

" vim
autocmd FileType vim setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" Javascript
autocmd FileType javascript setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4 colorcolumn=79
let javascript_enable_domhtmlcss=1

" D
autocmd FileType d setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" cmake support
autocmd BufNewFile,BufRead CMakeLists.txt setlocal ft=cmake

" Tex
autocmd FileType tex setlocal lbr
